// ============================================================
//          Positioning Mixins
// ------------------------------------------------------------

//**
// Private Mixin: _set-position
// Set the Position for the Position Mixins
//
// @mixin       _set-position
// @param       $position {list} One Value = top, Two Value = top left, Four Values = top right bottom left (t = zero position) can be in px or %
// @usage:      +_set-position($position)
//                  ...
//**
@mixin _set-position($position) {
    $targets: top right bottom left;

    @if length($position) == 0 {
      $position: 0 0 0 0;
    }

    @if length($position) == 2 {
      $position: nth($position, 1) nth($position, 2) nth($position, 1) nth($position, 2);
    }

    @if length($position) == 3 {
      $position: nth($position, 1) nth($position, 2) nth($position, 3) nth($position, 2);
    }

    @for $i from 1 through length($targets) {
      #{nth($targets, $i)}: nth($position, $i);
    }
}

//**
// Mixin: relative
// Relative Positioning Elements
//
// @mixin       relative
// @param       $pos {list} One Value = top, Two Value = top left, Four Values = top right bottom left (t = zero position) can be in px or %
// @usage:      +relative(1)
//                  ...
//**
@mixin relative($pos: 0) {
  @include _set-position($pos);
  position: relative;
}

//**
// Mixin: absolute
// Absolute Positioning Elements
//
// @mixin       absolute
// @param       $pos {list} One Value = top, Two Value = top left, Four Values = top right bottom left (t = zero position) can be in px or %
// @usage:      +absolute(10 10%)
//                  ...
//**
@mixin absolute($pos: 0 0 0 0) {
  @include _set-position($pos);
  position: absolute;
}

//**
// Mixin: fixed
// Fixed Positioning Elements
//
// @mixin       fixed
// @param       $pos {list} One Value = top, Two Value = top left, Four Values = top right bottom left (t = zero position) can be in px or %
// @usage:      +fixed(10)
//                  ...
//**
@mixin fixed($pos: 0 0 0 0) {
  @include _set-position($pos);
  position: fixed;
}

//**
// Mixin: static
// Reset CSS Position Methods
//
// @mixin       static
// @usage:      +static
//                  ...
//**
@mixin static {
  position: static;
  left: inherit;
  right: inherit;
  top: inherit;
  bottom: inherit;
}
